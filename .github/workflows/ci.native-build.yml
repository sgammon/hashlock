name: 'Native Build'

on:
  workflow_call:
    inputs:
      label:
        description: 'Label'
        type: string
        required: true
      runner:
        description: 'Runner'
        type: string
        required: true
      tag:
        description: 'Tag'
        type: string
        required: true
      artifact:
        description: 'Artifact'
        type: string
        required: true
      retention-days:
        description: 'Artifact Retention'
        type: number
        default: 7
      package-publish:
        description: 'Publish: Package'
        type: boolean
        default: false
      publish-dry:
        description: 'Publish: Dry-run'
        type: boolean
        default: true
    secrets:
      PUBLISH_TOKEN:
        description: 'Publishing Token'
        required: false

  workflow_dispatch:
    inputs:
      label:
        description: 'Label'
        type: string
        default: 'Linux x86-64'
      runner:
        description: 'Runner'
        type: string
        required: true
        default: 'ubuntu-latest'
      artifact:
        description: 'Artifact'
        type: string
        required: true
      retention-days:
        description: 'Artifact Retention'
        type: number
        default: 7
      package-publish:
        description: 'Publish: Package'
        type: boolean
        default: false
      publish-dry:
        description: 'Publish: Dry-run'
        type: boolean
        default: true

permissions:
  contents: read

jobs:
  native-build:
    name: 'Build: Native (${{ inputs.label }})'
    runs-on: ${{ inputs.runner }}
    steps:
      - name: 'Setup: Harden Runner'
        uses: step-security/harden-runner@17d0e2bd7d51742c71671bd19fa12bdc9d40a3d6 # v2.8.1
        with:
          disable-sudo: true
          egress-policy: block
          allowed-endpoints: >
            api.github.com:443
            bun.sh:443
            github.com:443
            objects.githubusercontent.com:443
            registry.npmjs.org:443
      - name: 'Setup: Checkout'
        id: checkout
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
        with:
          persist-credentials: false
      - name: 'Setup: Node'
        uses: actions/setup-node@60edb5dd545a775178f52524783378180af0d1f8 # v4.0.2
        with:
          node-version-file: .node-version
      - name: 'Setup: Bun'
        uses: oven-sh/setup-bun@f4d14e03ff726c06358e5557344e1da148b56cf7 # v1.2.2
        with:
          bun-version: latest
      - name: 'Setup: PNPM'
        uses: pnpm/action-setup@a3252b78c470c02df07e9d59298aecedc3ccdd6d # v3.0.0
        with:
          version: '8.15.3'
          run_install: |
            - args: [--frozen-lockfile, --strict-peer-dependencies]
      - name: 'Build: Bundle'
        id: build-bundle
        run: bun --bun run build
      - name: 'Build: Package'
        run: bun packaging/builder.ts
      - name: 'Artifact: Hashes'
        env:
          # prettier-ignore
          SHA1SUM_TOOL: "${{ startsWith(inputs.runner, 'macos') && 'shasum -a 1' || 'sha1sum' }}"
          # prettier-ignore
          SHA256SUM_TOOL: "${{ startsWith(inputs.runner, 'macos') && 'shasum -a 256' || 'sha256sum' }}"
          # prettier-ignore
          SHA512SUM_TOOL: "${{ startsWith(inputs.runner, 'macos') && 'shasum -a 512' || 'sha512sum' }}"
        run: |
          cp -fv bin/hashlock hashlock.${{ inputs.tag }}
          $SHA1SUM_TOOL hashlock.${{ inputs.tag }} | tee hashlock.${{ inputs.tag }}.sha1
          $SHA256SUM_TOOL hashlock.${{ inputs.tag }} | tee hashlock.${{ inputs.tag }}.sha256
          $SHA512SUM_TOOL hashlock.${{ inputs.tag }} | tee hashlock.${{ inputs.tag }}.sha512
      - name: 'Build: Archives'
        run: |
          echo "Building archives..."
          mkdir hashlock-${{ inputs.tag }}
          cp -fv bin/hashlock hashlock-${{ inputs.tag }}/hashlock
          cp -fv hashlock.${{ inputs.tag }}.sha1 hashlock-${{ inputs.tag }}/
          cp -fv hashlock.${{ inputs.tag }}.sha256 hashlock-${{ inputs.tag }}/
          cp -fv hashlock.${{ inputs.tag }}.sha512 hashlock-${{ inputs.tag }}/

          echo ""
          echo "Building tarball..."
          tar -cvf hashlock-${{ inputs.tag }}.tar hashlock-${{ inputs.tag }}/*
          gzip -v --best hashlock-${{ inputs.tag }}.tar
          mv -fv hashlock-${{ inputs.tag }}.tar.gz hashlock-${{ inputs.tag }}.tgz
          rm -fv hashlock-${{ inputs.tag }}.tar
          echo ""
          echo "Building zip..."
          zip -9 -v -r hashlock-${{ inputs.tag }}.zip hashlock-${{ inputs.tag }}/*
          echo ""
          echo "Building xz..."
          tar -cvf - hashlock-${{ inputs.tag }}/ | xz -9 -v -z - > hashlock-${{ inputs.tag }}.txz

          mkdir -p hashlock-${{ inputs.tag }}-archives
          mv -fv hashlock-${{ inputs.tag }}.tgz hashlock-${{ inputs.tag }}.zip hashlock-${{ inputs.tag }}.txz hashlock-${{ inputs.tag }}-archives/

          cd hashlock-${{ inputs.tag }}-archives
          echo ""
          echo "Generating hashes for archives..."
          du -h ./*
          for f in ./*; do sha256sum $f | tee $f.sha256; done
          for f in ./*; do sha512sum $f | tee $f.sha512; done
          cd ..
          echo "Cleaning up..."
          rm -frv hashlock-${{ inputs.tag }} hashlock-${{ inputs.tag }}.tgz hashlock-${{ inputs.tag }}.zip hashlock-${{ inputs.tag }}.txz
          echo "Done."
      - name: 'Artifact: Executable'
        uses: actions/upload-artifact@65462800fd760344b1a7b4382951275a0abb4808 # v4.3.3
        with:
          name: ${{ inputs.artifact }}
          retention-days: ${{ inputs.retention-days }}
          compression-level: 4
          overwrite: true
          path: |
            hashlock.${{ inputs.tag }}
            hashlock.${{ inputs.tag }}.sha1
            hashlock.${{ inputs.tag }}.sha256
            hashlock.${{ inputs.tag }}.sha512
      - name: 'Artifact: Archives'
        uses: actions/upload-artifact@65462800fd760344b1a7b4382951275a0abb4808 # v4.3.3
        with:
          name: ${{ inputs.artifact }}-archives
          retention-days: ${{ inputs.retention-days }}
          compression-level: 0
          overwrite: true
          path: |
            hashlock-${{ inputs.tag }}-archives/hashlock-${{ inputs.tag }}.tgz
            hashlock-${{ inputs.tag }}-archives/hashlock-${{ inputs.tag }}.tgz.sha256
            hashlock-${{ inputs.tag }}-archives/hashlock-${{ inputs.tag }}.tgz.sha512
            hashlock-${{ inputs.tag }}-archives/hashlock-${{ inputs.tag }}.zip
            hashlock-${{ inputs.tag }}-archives/hashlock-${{ inputs.tag }}.zip.sha256
            hashlock-${{ inputs.tag }}-archives/hashlock-${{ inputs.tag }}.zip.sha512
            hashlock-${{ inputs.tag }}-archives/hashlock-${{ inputs.tag }}.txz
            hashlock-${{ inputs.tag }}-archives/hashlock-${{ inputs.tag }}.txz.sha256
            hashlock-${{ inputs.tag }}-archives/hashlock-${{ inputs.tag }}.txz.sha512

  smoke-test:
    name: 'Tests: Smoke Test (${{ inputs.label }})'
    runs-on: ${{ inputs.runner }}
    needs: [native-build]

    steps:
      - name: 'Setup: Harden Runner'
        uses: step-security/harden-runner@17d0e2bd7d51742c71671bd19fa12bdc9d40a3d6 # v2.8.1
        with:
          disable-sudo: true
          egress-policy: block
      - name: 'Download: Artifacts'
        uses: actions/download-artifact@65a9edc5881444af0b9093a5e628f2fe47ea3b2e # v4.1.7
        with:
          name: ${{ inputs.artifact }}
      - name: 'Check: Hashes'
        run: |
          file hashlock.${{ inputs.tag }}
          du -h hashlock.${{ inputs.tag }}
          chmod +x hashlock.${{ inputs.tag }}
          ./hashlock.${{ inputs.tag }} --help
          ./hashlock.${{ inputs.tag }} check . --strict

  package-publish:
    name: 'Publish: Native (${{ inputs.label }})'
    if: inputs.package-publish
    runs-on: ${{ inputs.runner }}
    needs: [native-build, smoke-test]
    permissions:
      contents: read
      id-token: write
    steps:
      - name: 'Setup: Harden Runner'
        uses: step-security/harden-runner@17d0e2bd7d51742c71671bd19fa12bdc9d40a3d6 # v2.8.1
        with:
          egress-policy: audit
      - name: 'Setup: Checkout'
        id: checkout
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
        with:
          persist-credentials: false
      - name: 'Setup: Node'
        uses: actions/setup-node@60edb5dd545a775178f52524783378180af0d1f8 # v4.0.2
        with:
          node-version-file: .node-version
      - name: 'Setup: Bun'
        uses: oven-sh/setup-bun@f4d14e03ff726c06358e5557344e1da148b56cf7 # v1.2.2
        with:
          bun-version: latest
      - name: 'Setup: PNPM'
        uses: pnpm/action-setup@a3252b78c470c02df07e9d59298aecedc3ccdd6d # v3.0.0
        with:
          version: '8.15.3'
          run_install: |
            - args: [--frozen-lockfile, --strict-peer-dependencies]
      - name: 'Build: Package'
        run: bun packaging/builder.ts
        env:
          ENABLE_PROVENANCE: 'true'
          PUBLISH_REGISTRY: 'https://registry.npmjs.org/'
          PUBLISH_TOKEN: ${{ secrets.PUBLISH_TOKEN }}
          PUBLISH_LIVE_UNLOCK_GATE:
            ${{ inputs.publish-dry && 'false' || 'true' }}
